WITH high_risk_any_year AS (
    -- Identify high-risk diabetes patients from 2023-2025 where any year's claim amount is in the top 5%
    SELECT DISTINCT MembershipNumber AS member_id
    FROM hive_metastore.off_orig.enhanced_member_features
    WHERE (
        claim_amt_2023 >= (SELECT PERCENTILE_APPROX(claim_amt_2023, 0.95)
                          FROM hive_metastore.off_orig.enhanced_member_features
                          WHERE plan_type = 'PPO')
        OR claim_amt_2024 >= (SELECT PERCENTILE_APPROX(claim_amt_2024, 0.95)
                            FROM hive_metastore.off_orig.enhanced_member_features
                            WHERE plan_type = 'PPO')
        OR claim_amt_2025 >= (SELECT PERCENTILE_APPROX(claim_amt_2025, 0.95)
                            FROM hive_metastore.off_orig.enhanced_member_features
                            WHERE plan_type = 'PPO')
    )
    AND has_diabetes_proc = 1
    AND plan_type = 'PPO'
),

glucose_tests AS (
    -- Identify members with any glucose tests (PROC_CD '83036' or '82947') from 2023 to 2025
    SELECT DISTINCT MembershipNumber AS member_id
    FROM hive_metastore.off_orig.claims_member
    WHERE PROC_CD IN ('83036', '82947')  -- A1C or random blood glucose tests
        AND PROC_DT BETWEEN '2023-01-01' AND '2025-10-18'
),

true_skip AS (
    -- Define true skip group: high-risk members with no glucose tests from 2023-2025
    SELECT h.member_id
    FROM high_risk_any_year h
    LEFT JOIN glucose_tests g ON h.member_id = g.member_id
    WHERE g.member_id IS NULL  -- No tests in the entire period
),

icu_visits AS (
    -- Collect all ICU visits with expanded criteria from 2023 to 2025
    SELECT DISTINCT member_id, PROC_DT AS visit_date
    FROM hive_metastore.off_orig.claims_member
    WHERE (PROC_CD LIKE '9929%' OR PLSRV_CD LIKE '%21%')  -- Broaden ICU definition
        AND PROC_DT BETWEEN '2023-01-01' AND '2025-10-18'
        AND DIAG_CD LIKE '%250%'  -- Filter for diabetes-related acute conditions
)

-- Count ICU visits for true skip group vs. non-skip group
SELECT 'True Skip' AS group_name, COUNT(DISTINCT iv.visit_date) AS num_icu
FROM icu_visits iv
INNER JOIN true_skip ts ON iv.member_id = ts.member_id

UNION ALL

SELECT 'Not Skip' AS group_name, COUNT(DISTINCT iv.visit_date) AS num_icu
FROM icu_visits iv
LEFT JOIN true_skip ts ON iv.member_id = ts.member_id
WHERE ts.member_id IS NULL;
